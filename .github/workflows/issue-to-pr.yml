name: Convert Team Request Issue to PR

on:
  issues:
    types: [opened, labeled]

jobs:
  convert-to-pr:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'team-request')
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse issue body into environment
        id: parse
        run: |
          body="${{ github.event.issue.body }}"

          extract() {
            echo "$body" | grep -iE "^$1[:|-]" | sed -E "s/^$1[:|-] *//I" | tr -d '\r'
          }

          echo "TEAM_NAME=$(extract 'team name')" >> $GITHUB_ENV
          echo "DESCRIPTION=$(extract 'description')" >> $GITHUB_ENV
          echo "MAINTAINERS=$(extract 'maintainers')" >> $GITHUB_ENV
          echo "MEMBERS=$(extract 'members')" >> $GITHUB_ENV
          echo "PRIVACY=$(extract 'privacy')" >> $GITHUB_ENV

      - name: Fail if team name is missing
        run: |
          if [[ -z "${{ env.TEAM_NAME }}" ]]; then
            echo "❌ TEAM_NAME is empty. Check the issue format (expected: 'Team Name: ...')."
            exit 1
          fi
          
      - name: Prepare team file
        run: |
          safe_name=$(echo "${TEAM_NAME}" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9-' '-')
          echo "SAFE_NAME=$safe_name" >> $GITHUB_ENV
          TEAM_FILE="teams/${safe_name}.yaml"
          echo "TEAM_FILE=$TEAM_FILE" >> $GITHUB_ENV

      - name: Fail if team file already exists
        run: |
          if [ -f "$TEAM_FILE" ]; then
            echo "❌ Team config $TEAM_FILE already exists. Aborting."
            exit 1
          fi

      - name: Fail if team already exists in GitHub
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh team view "$TEAM_NAME" --json name &>/dev/null; then
            echo "❌ Team '$TEAM_NAME' already exists in GitHub. Aborting."
            exit 1
          fi

      - name: Create team file
        run: |
          mkdir -p teams
          {
            echo "team:"
            echo "  name: ${TEAM_NAME}"
            echo "  description: ${DESCRIPTION}"
            echo "  privacy: ${PRIVACY:-closed}"
            echo "  maintainers:"
            echo "${MAINTAINERS}" | tr ',' '\n' | sed 's/^/    - /'
            echo "  members:"
            echo "${MEMBERS}" | tr ',' '\n' | sed 's/^/    - /'
          } > "$TEAM_FILE"

      - name: Commit and create PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "repo-factory[bot]"
          git config user.email "actions@github.com"
          branch="auto/team-${SAFE_NAME}"
          git checkout -b "$branch"
          git add "$TEAM_FILE"
          git commit -m "Add team config for ${TEAM_NAME}"
          git push origin "$branch"

          gh pr create \
            --title "Add team: ${TEAM_NAME}" \
            --body "Auto-generated from issue #${{ github.event.issue.number }}" \
            --head "$branch" \
            --base main

          # Capture the PR URL after creation
          pr_url=$(gh pr view "$branch" --json url -q .url)
          echo "PR_URL=$pr_url" >> $GITHUB_ENV

      - name: Comment on the issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue comment ${{ github.event.issue.number }} \
            --body "📦 A pull request has been created to add the team **${TEAM_NAME}**: $PR_URL"
